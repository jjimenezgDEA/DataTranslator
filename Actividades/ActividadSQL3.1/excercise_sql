--Parte 1
-- Mostrar los nombres y apellidos de todos los actores de la tabla actor.
SELECT first_name, last_name
FROM actor;

--Mostrar el nombre y apellido de cada actor en una sola columna en mayusculas. Nombre la columna Actor Name
SELECT
UPPER(first_name)||' '||UPPER(last_name) AS 'Actor Name'
FROM actor;

-- Encontrar el número de identificación, el nombre y el apellido de un actor, del que sólo se conoce el nombre, "Joe". ¿Qué consulta utilizarías para obtener esta información?
SELECT actor_id,first_name,last_name
FROM actor
WHERE first_name LIKE 'JOE';

--Encontrar todos los actores cuyo apellido contenga las letras GEN
SELECT actor_id,first_name,last_name
FROM actor
WHERE last_name LIKE '%GEN%';

--Encontrar todos los actores cuyos apellidos contengan las letras LI. Esta vez, odena las filas por apellido y nombre, en ese orden.
SELECT actor_id,first_name,last_name
FROM actor
WHERE last_name LIKE '%LI%'
ORDER BY last_name ASC, first_name ASC;

--Utilizar IN, para mostrar las columnas country_id y country de los siguientes países: Afganistán, Bangladesh y China
SELECT country_id,country
FROM country
WHERE country IN ('Afghanistan','Bangladesh','China');

--Parte 2
--Enumera los apellidos de los actores, así como cuántos actores tienen ese apellido.
SELECT last_name,count(last_name)
FROM actor
GROUP BY last_name
HAVING count(last_name);

--Enumere los apellidos de los actores y el número de actores que tienen ese apellido, pero sólo para los nombres que comparten al menos dos actores.
SELECT last_name, count(last_name)
FROM actor
GROUP BY last_name
HAVING count(last_name)>1;

--Utilice JOIN para mostrar los nombres y apellidos, así como la dirección, de cada miembro del personal. Utilice las tablas staff y address:
SELECT st.first_name,st.last_name,ad.address
FROM staff st
INNER JOIN address ad 
ON st.address_id=ad.address_id;

--Utilice JOIN para mostrar el importe total recaudado por cada miembro del personal en agosto de 2005. Utilice las tablas personal y pago.
SELECT st.staff_id,st.first_name,st.last_name,round(sum(py.amount),2) as TAmount
FROM staff st
LEFT JOIN payment py
ON st.staff_id=py.staff_id
GROUP by st.staff_id

--Enumere cada película y el número de actores que figuran en ella. Utilice las tablas actor_película y película. Utilice la unión interna.
SELECT fi.title AS FilmTitle,count(fa.actor_id)
FROM film fi
INNER JOIN film_actor fa
ON fi.film_id=fa.film_id
GROUP BY fi.title;

--¿Cuántas copias de la película Jorobado Imposible existen en el sistema de inventario?
SELECT fi.film_id AS ID,fi.title AS FilmTitle,count(inv.inventory_id) AS NCopies
FROM film fi
INNER JOIN inventory inv
ON inv.film_id=fi.film_id
WHERE fi.film_id=430
GROUP BY fi.film_id;

--Utilizando las tablas payment y customer y el comando JOIN, enumera el total pagado por cada cliente. Enumera los clientes alfabéticamente por su apellido.
SELECT cu.customer_id,cu.last_name,cu.first_name, round(sum(py.amount),2) AS TotalPaid
FROM customer cu
INNER JOIN payment py
ON cu.customer_id=py.customer_id
GROUP BY cu.customer_id
ORDER BY cu.last_name ASC;

--Parte 3
--La música de Queen ha experimentado un improbable resurgimiento. Como consecuencia involuntaria, las películas que empiezan por la letra Q también han aumentado su popularidad. Utilice subconsultas para mostrar los títulos de las películas que empiezan por la letra Q y cuyo idioma es el inglés.
SELECT title
FROM film
WHERE title LIKE 'Q%' AND (SELECT language_id FROM language WHERE name='English');

--Utiliza las subconsultas para mostrar todos los actores que aparecen en la película Alone Trip.
SELECT fi.title, ac.first_name, ac.last_name
FROM actor ac
INNER JOIN film_actor fa ON ac.actor_id=fa.actor_id
INNER JOIN film fi ON fi.film_id=fa.film_id
where fi.title IN (SELECT fi.title FROM film WHERE fi.title='ALONE TRIP');

--Desea realizar una campaña de marketing por correo electrónico en Canadá, para lo cual necesitará los nombres y las direcciones de correo electrónico de todos los clientes canadienses. Utilice uniones para recuperar esta información.
SELECT co.country,cu.first_name,cu.last_name,cu.email
FROM customer cu
INNER JOIN address ad ON cu.address_id=ad.address_id
INNER JOIN city ci ON ci.city_id=ad.city_id
INNER JOIN country co ON co.country_id=ci.country_id
WHERE co.country='Canada';

--Las ventas han disminuido entre las familias jóvenes, y usted desea dirigirse a todas las películas familiares para una promoción. Identifique todas las películas categorizadas como familiares.
SELECT ca.name AS 'Category',fi.title AS 'FilmtTitle'
FROM film fi
INNER JOIN film_category fc ON fc.film_id=fi.film_id
INNER JOIN category ca ON ca.category_id=fc.category_id
where ca.name='Family';

--Muestre las películas más alquiladas en orden descendente.
SELECT film.film_id,film.title,count(*) rentas FROM rental JOIN inventory ON rental.inventory_id=inventory.inventory_id
JOIN film ON film.film_id=inventory.film_id
GROUP BY film.film_id,film.title
ORDER BY rentas DESC;

--Escriba una consulta para mostrar el volumen de negocio, en dólares, de cada tienda.
SELECT store.store_id, sum(payment.amount) 
FROM store JOIN customer ON store.store_id=customer.store_id
JOIN payment ON payment.customer_id = customer.customer_id
GROUP BY store.store_id;

--Escribir una consulta para mostrar para cada tienda su ID de tienda, ciudad y país.
SELECT store.store_id,city.city,country.country FROM store 
JOIN address ON address.address_id=store.address_id
JOIN city ON city.city_id=address.city_id
JOIN country ON country.country_id=city.country_id;

--Enumere los cinco géneros más importantes en ingresos brutos en orden descendente. (Sugerencia: es posible que tenga que utilizar las siguientes tablas: categoría, film_category, inventario, pago y alquiler).
SELECT category.name,sum(payment.amount) amount FROM rental JOIN inventory ON rental.inventory_id=inventory.inventory_id
JOIN payment ON payment.rental_id=rental.rental_id
JOIN film_category ON film_category.film_id=inventory.film_id
JOIN category ON category.category_id=film_category.category_id
GROUP BY category.name
ORDER BY amount DESC;